#![allow(dead_code)]


//##############################################################################
// TYPES
pub type Mat4 = [f32; 16];


//##############################################################################
// MAIN
pub trait Mat4Methods{
	////////////////////////////////////////////////////////////
	// Static Functions
	////////////////////////////////////////////////////////////  
		fn zero( ) -> Mat4{		[ 0.0, 0.0, 0.0, 0.0,  0.0, 0.0, 0.0, 0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ] }
		fn identity() -> Mat4{	[ 1.0, 0.0, 0.0, 0.0,  0.0, 1.0, 0.0, 0.0,  0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ] }

		fn from_quat( q: &[f32; 4] ) -> Mat4 {
			let x2 = q[0] + q[0];
			let y2 = q[1] + q[1];
			let z2 = q[2] + q[2];
			let xx = q[0] * x2;
			let xy = q[0] * y2;
			let xz = q[0] * z2;
			let yy = q[1] * y2;
			let yz = q[1] * z2;
			let zz = q[2] * z2;
			let wx = q[3] * x2;
			let wy = q[3] * y2;
			let wz = q[3] * z2;
			[	1.0 - (yy + zz),	xy + wz,			xz - wy,			0.0,
				xy - wz,			1.0 - (xx + zz),	yz + wx,			0.0,
				xz + wy,			yz - wx,			1.0 - (xx + yy),	0.0,
				0.0,				0.0,				0.0,				1.0 ]
		}

	////////////////////////////////////////////////////////////
	// Instance Getters Setters
	////////////////////////////////////////////////////////////
		//fn x( &mut self, v: f32) -> &mut Vec3;
		//fn y( &mut self, v: f32) -> &mut Vec3;
		//fn z( &mut self, v: f32) -> &mut Vec3;


	////////////////////////////////////////////////////////////
	// Instance Data Manipulation
	////////////////////////////////////////////////////////////
		//fn add( &mut self, v: &Vec3 ) -> &mut Vec3;
		//fn add_from( &mut self, a: &Vec3, b: &Vec3 ) -> &mut Vec3;
}


impl Mat4Methods for Mat4{
	////////////////////////////////////////////////////////////
	// Getters - Setters
	////////////////////////////////////////////////////////////		


	////////////////////////////////////////////////////////////
	// Data Manipulation
	////////////////////////////////////////////////////////////

}


//##############################################################################